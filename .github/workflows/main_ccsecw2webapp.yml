name: Pipeline to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://ccsecw2reg.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername_30fffea09cf74c74973f022931feb204 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_0b5bac57b0bd4ca2b524d5c48f14a083 }}

    - name: Build Image
      id: build-image
      uses: docker/build-push-action@v2
      with:
        push: false 
        tags: ccsecw2reg.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_30fffea09cf74c74973f022931feb204 }}/myapp:${{ github.sha }}
        file: ./Dockerfile
  
  Snyk_scan:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Run Snyk scan
        continue-on-error: true
        run: |
          docker pull snyk/snyk:docker
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${{ github.workspace }}:/project \
            -w /project \
            -e SNYK_TOKEN=${{ secrets.SNYK_TOKEN }} \
            snyk/snyk:docker snyk test \
            --docker ccsecw2reg.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_30fffea09cf74c74973f022931feb204 }}/myapp:${{ github.sha }} \
            --file=./Dockerfile \
            --severity-threshold=high \
            --json > snyk_report.json || true  # Ignore the exit code to prevent job failure

      - name: Upload Snyk scan results
        uses: actions/upload-artifact@v3
        with:
          name: snyk-scan-results
          path: snyk_report.json

      - name: Push container image to registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ccsecw2reg.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_30fffea09cf74c74973f022931feb204 }}/myapp:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: Snyk_scan
    outputs:
      webapp-url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ccsecw2webapp'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_628f743c4b3a44dfa39c8a57b309b0a3 }}
        images: 'ccsecw2reg.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_30fffea09cf74c74973f022931feb204 }}/myapp:${{ github.sha }}'

  zap_scan:
    name: Run ZAP Scan
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install OWASP ZAP
        run: sudo apt-get update && sudo apt-get install zaproxy -y

      - name: Start OWASP ZAP
        run: zap.sh -daemon -port 8080 -host 127.0.0.1 -config api.disablekey=true

      - name: Run ZAP Full Scan
        continue-on-error: true
        run: zap-cli -p 8080 -t ${{ needs.deploy.outputs.webapp-url }} quick-scan --self-contained

      - name: Report Generation
        run: zap-cli report -f html -o owasp-zap-report.html

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: owasp-zap-report
          path: owasp-zap-report.html
